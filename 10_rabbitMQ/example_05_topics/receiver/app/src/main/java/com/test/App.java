/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.test;

import java.io.IOException;
import java.util.concurrent.TimeoutException;

import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.DeliverCallback;
import com.rabbitmq.client.AMQP.Exchange;

public class App {
    private static final String EXCHANGE_NAME = "topic_logs";

    public static void main(String[] args) throws IOException, TimeoutException {

        ConnectionFactory factory = new ConnectionFactory();
        factory.setHost("localhost");

        Connection connection = factory.newConnection();
        Channel channel = connection.createChannel();

        channel.exchangeDeclare(EXCHANGE_NAME, "topic");
        String queueName = channel.queueDeclare().getQueue(); // rabbitmq 에서 랜덤으로 생성된 큐 받아온다

        if(args.length < 1){
            System.err.println("Usage: app [biding key]...");
            System.exit(1);
        }

        for(String bidingKey: args){
            channel.queueBind(queueName, EXCHANGE_NAME, bidingKey);
        }

        System.out.println("wating for message Toexit press CTRL+C");

        DeliverCallback deliverCallback = (consumerTag, delivery) -> {
            String message = new String(delivery.getBody(), "UTF-8");
            System.out.println(message);
            System.out.println("delivery.getEnvelope().getRoutingKey() " + delivery.getEnvelope().getRoutingKey());
        };

        channel.basicConsume(queueName, true, deliverCallback, consumerTag -> {
        });
        System.out.println("eof");

    }

}


