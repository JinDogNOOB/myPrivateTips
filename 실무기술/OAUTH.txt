OAuth는 데이터를 간편하고 안전하게 주고받기 위해 만들어진 표준이다.

OAuth는 ID와 비밀번호 대신 액세스 토큰을 기반으로 사용자를 식별한다
액세스 토큰은 API를 제공하는 리소스 서버만 발급할 수 있으며 일정시간이후 자동으로 폐기될 수 있다. 


OAuth 1.0a VS OAuth 2.0

1.0a 는 인증과 인가 역할을 모두 수행해서 2.0보다 안전하다고 볼 수 있음 
그러나 2.0에 비해 인증 과정이 복잡하고 표준에서 요구하는 서명(signature), 요청 토큰(request token) 등 여러 보안 요소들을 직접 구현해야 해서 별도의 라이브러리가 있어도 구현하는데 꽤 시간이 걸린다

2.0은 1.0a에 있는 인증절차가 삭제되고 인가 절차만 남아서 간단해서 사용하기 쉽다. 다만 권한을 확인하는 데 사용할 액세스 토큰을 어떻게 얻는지 확인할 방법이 없어서 가로채기 공격에 취약하다. 이는 https나 만료시간, ip체크 등의 보완책을 사용함으로써 대응할 수 있다.

리소스 소유자 (resource owner) : 리소스 서버에서 제공하는 기능을 실제로 사용할 주체, ID 와 password를 이용하여 리소스 클라이언트에게 권한을 인가하여 액세스 토큰을 획득하게 될 주체로 이해하면된다. 최종 사용자라고 한다. 

리소스 클라이언트(resource client)는 리소스 소유자로부터 사용 인가를 받아 소유자 대신 액세스 토큰을 획득하며 액세스 토큰을 사용해 리소스 서버의 API를 사용하는 주체이다. 반드시 최종 사용자의 인가가 필요하다

인가 서버(authorization server)는 액세스 토큰과 인가 코드를 관리하는 서버이다. 리소스 서버가 올바른 액세스 토큰을 받았는지 검증하고, 만료된 액세스 토큰을 폐기한다. 인증서버라고도 한다.

리소스 서버(resource server)는 보호된 리소스를 관리하며 리소스 클라이언트가 사용할 API를 제공하는 주체이다. API를 사용하기 위해서는 액세스 토큰이 필요하고, 리소스 서버는 액세스 토큰이 유효한지 확인하기 위해서 인가 서버와 통신을 주고 받기도 한다.



### 인가코드 획득 및 액세스 토큰 요청 단계 
  인가 서버는 인가를 요청했던 앱으로 인가 코드를 전달하는데 이때 페이스북 공식 소프트웨어 개발 키트를 사용하면 인가코드없이 바로 액세스 토큰 획득이 가능하다.



더 자세한 문서와 순서는 각 회사 공식문서 참고하자

