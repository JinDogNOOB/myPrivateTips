* 영문자 하나 찾기 
  ex) [a-zA-Z], [a-z], [A-Z]

* 숫자 하나 찾기
  ex) [0-9]

* 특수문자 하나 찾기
  ex) 역슬래시 추가해야함 
  특수문자는 해석될때 특정한 규칙으로 이해되니까 문제가 되는건데 이때 
  \ 를 붙여줌으로써 이스케이프할수있다. \를 이스케이프 문자라고한다.
  대괄호를 찾고싶다 -> [\\[\\]] 정규표현식에서는 이스케이프 문자 두개써야함

* 대괄호 안 ^(캐럿)
  NOT을 뜻하며 캐럿 이후에 오는 패턴을 제외한 모든 글자를 찾는다.
  ex) [^A-Z] 패턴은 대문자를 제외한 모든 글자 1개를 찾을때 쓰임

* 대괄호 밖 ^(캐럿)
  가장 처음에 오는 문자열의 문자를 찾는 패턴이다.
  ex) ^[A-Z] 는 주어진 문자열의 첫 번째가 대문자로 시작할 경우 대문자를 찾는 패턴

* 대괄호 밖 $(달러)
  캐럿과 반대의 의미로 가장 마지막 글자를 검사
  ex) [0-9]$ 패턴은 가장 마지막에 오는 글자가 숫자인지 검사. 
  대괄호 안쪽 달러는 하나의 문자로 인식해서 찾음 역슬래시 불필요

* 대괄호 밖 .(점) 
  모든 글자를 포함하는 패턴으로 공백을 포함한 모든 글자가 이 패턴과 일치한다. 

* 하나 이상의 문자 찾기
  ex) [a-z]+ HellWorld 에서 찾으면 ell, orld

* 지정된 길이의 문자열 찾기
  고정된 길이를 지정할때는 {} 중괄호 사용
  ex) [a-z0-9,]{3} 
  [a-z0-9] 주어진 문자가 소문자 숫자 쉼표 문자중 1개인지 검사 
  {3} 문자열 길이가 정확히 3인지 검사 

* 이메일 주소 검사
  RFC5332 가 있다 공식이다.

* 정규표현식은 POSIX 또는 PCRE가 있다. 두 규칙은 비슷하나 일부 메소드가 다르다.