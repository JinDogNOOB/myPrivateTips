컴포지트 패턴
gui에서 패널 - 메뉴 텍스트 처럼
최상위 구성요소나 중간 구성요소나 똑같은 일 하는놈들
트리형식으로 보일때 중간에 뚝 때서 내놔도 정상이다

Iterator 패턴
반복자 
iterator interface 등을 구성하여 
hasNext next remove 등을 해놓으면 
서로 arraylist array hashtable 등등 서로 호환안되는데
이를 해결할 수 있다.


스테이트 패턴 \
스테이트마다 작업이 달라야할때 쓸수있다.
기존에 0 1 2 3 이렇게 스테이트를 나누고
본 클래스에서 if문써서 스테이트 확인후에 작업을 거기다가 다 적는 것 대신에
각 스테이트를 클래스로 만들어서 
스테이트 클래스들에게 각 스테이트를 할당하고 작업을 다 다르게 한다음
컨텍스트 클래스에서는 setState등의 메소드로 스테이트를 바꿔가면서 다른 작업을 제공한다.
state클래스에서 컨텍스트 클래스의 setState를 호출해서 바꾸는것도 괜찮다

스트래티지 패턴하고 비슷한대...
스트래티지는 부분의 행동을 변경해야할때 유연하게 대처할 수 있는 패턴
스테이트 패턴은 컨텍스트 객체에 수만은 조건문을 집어넣는 대신에 사용할 수 있는 패턴
