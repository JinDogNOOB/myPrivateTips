// 로컬 git
git 
git init
git config --global user.name ""
git config --global user.email ""

git add
git commit -a //git add 자동으로 해준다
git commit -m "" // 간단한 커멘트 

git branch // 브랜치 현황 보기
git branch "" // 브랜치 생성
git checkout "" // 브랜치Yee동

git merge "" // 현재 브랜치와대상 브랜치 머지 



// 원격 저장소 github
git clone "" 원격저장소의 모든 내용을 로컬 저장소로 복사
git remote 로컬 저장소를 특정 원격 저장소와 연결

git pull // 원격 저장소에서 쌔거 땡겨온다
// git remote ㅁ여령을 통해 서로 연결된 원격 저장소의 최신 내용을 로컬 저장소로 가져오면서
// 다른거 있으면 병합한다. git push와 반대성격

git push origin master // 원격 저장소에 푸시
// git push "원격주소" "브랜치" 형식임

git push origin --all // 모든 브랜치 올리는 명령어

git fetch // 로컬 저장소와 원격 저장소의 변경사항이 다를 때 이를 비교하고
// git merge 명령어와 함께 최신데이터를 반영하거나 충돌을 해결한다.. 

pull은 자동으로 페치 병합을 해줘서 뭐가 됬는지알수없다는단점
fetch는 손수 작업해야하므로 뭐가 변했는지 알수있다.

fetch 후 git branch -a 해서 리모트 브랜치까지 본 후에 머지
git merge origin/master 
tab 누르면 대상 나온다


머징상태에서 
git diff 로 차이점 보기

정돈..
// 여기까지가 기본


Git 고급 
이슈트래커, 위키, 풀 리퀘스트, 코드리뷰

이슈트래커 : 버그보고, 등등의 게시판 
위키 : 위키문서형식으로 대충 뭐 알림 참고용자료 등등 올린다.
풀 리퀘스트 : 원격 저장소와 원격 저장소 를 비교한 후 변경 내역을 병합해달라고 요청을 할 ㅅ ㅜ있다. 
이거를 풀 리퀘스트라고한다.
요청은 원저장소를 포크한후에 그 포크한거에다가 작업 한 후에 풀리퀘스트 보내는 거다
